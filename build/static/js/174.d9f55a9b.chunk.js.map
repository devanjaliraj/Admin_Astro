{"version":3,"sources":["views/apps/pagesetup/termscondition/EditTermCondition.js"],"names":["AddTermsCondition","props","onEditorStateChange","editorState","setState","desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler","e","target","name","value","submitHandler","preventDefault","id","match","params","axiosConfig","post","state","then","response","console","log","history","push","catch","error","EditorState","createEmpty","this","get","data","className","col-sm-6","onClick","onSubmit","lg","md","sm","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","color","React","Component"],"mappings":"yWAYMA,G,OAAiB,kDACrB,WAAYC,GAAQ,IAAD,EAKf,OALe,qBACjB,cAAMA,IAORC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CACZD,cACAE,KAAMC,IAAYC,uBAAaJ,EAAYK,yBAE7C,EAiBFC,cAAgB,SAACC,GACf,EAAKN,SAAS,eAAGM,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAC1C,EACFC,cAAgB,SAACJ,GACfA,EAAEK,iBACF,IAAMC,EAAO,EAAKf,MAAMgB,MAAMC,OAAxBF,GACNG,IACGC,KAAK,yBAAD,OAA0BJ,GAAM,EAAKK,OACzCC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GAEZ,EAAKtB,MAAMyB,QAAQC,KAAK,sDAIzBC,OAAM,SAACC,GACNL,QAAQC,IAAII,EAAMN,cA5CtB,EAAKF,MAAQ,CACXhB,KAAM,GACNF,YAAa2B,cAAYC,eACzB,EA+GH,OA9GA,8CASD,WAAqB,IAAD,OACZf,EAAOgB,KAAK/B,MAAMgB,MAAMC,OAAxBF,GACNG,IACGc,IAAI,2BAAD,OAA4BjB,IAC/BM,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASW,KAAKA,KAAK7B,MAC/B,EAAKD,SAAS,CACZC,KAAMkB,EAASW,KAAKA,KAAK7B,UAG5BuB,OAAM,SAACC,GACNL,QAAQC,IAAII,EAAMN,eAEvB,oBAsBD,WACE,OACE,kBAAC,IAAI,KACH,kBAAC,IAAG,CAACY,UAAU,OACb,kBAAC,IAAG,KACF,wBAAIC,YAAA,EAASD,UAAU,cAAY,4BAIrC,kBAAC,IAAG,KACF,kBAAC,IAAM,CACLA,UAAU,8BACVE,QAAS,kBACPX,IAAQC,KAAK,qDACd,UAMP,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACW,SAAUN,KAAKlB,eACnB,kBAAC,IAAG,CAACyB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKN,UAAU,QACrC,kBAAC,IAAK,oBACN,kBAAC,SAAM,CACLO,iBAAiB,wBACjBC,iBAAiB,eACjBC,gBAAgB,cAChBzC,YAAa6B,KAAKX,MAAMlB,YACxBD,oBAAqB8B,KAAK9B,oBAC1B2C,QAAS,CACPC,QAAS,CAAC,SAAU,YAAa,WAAY,cAC7CC,OAAQ,CACND,QAAS,CACP,OACA,SACA,YACA,gBACA,aAEFE,KAAM,CAAEb,UAAW,6BACnBc,OAAQ,CAAEd,UAAW,6BACrBe,UAAW,CAAEf,UAAW,6BACxBgB,cAAe,CACbhB,UAAW,6BAEbiB,KAAM,CAAEjB,UAAW,8BAErBkB,UAAW,CACTlB,UAAW,6BAEbmB,SAAU,CACRnB,UAAW,6BAEboB,WAAY,CACVpB,UAAW,gCAIjB,8BAEF,kBAAC,IAAM,CAACqB,MAAM,WAAS,kBAKhC,EArHoB,CAASC,IAAMC,YAuHvB1D,a","file":"static/js/174.d9f55a9b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, Col, Row, Form, Button, Label } from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { history } from \"../../../../history\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass AddTermsCondition extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      desc: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/admin/getone_term_cond/${id}`)\r\n      .then((response) => {\r\n        console.log(response.data.data.desc);\r\n        this.setState({\r\n          desc: response.data.data.desc,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .post(`/admin/edit_term_cond/${id}`, this.state)\r\n      .then((response) => {\r\n        console.log(response);\r\n        // swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\r\n          `/app/pagesetup/termscondition/termConditionList`\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n          <Col>\r\n            <h1 col-sm-6 className=\"float-left\">\r\n              Edit Term And Condition\r\n            </h1>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              className=\" btn btn-danger float-right\"\r\n              onClick={() =>\r\n                history.push(\"/app/pagesetup/termscondition/termConditionList\")\r\n              }\r\n            >\r\n              Back\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          <Form onSubmit={this.submitHandler}>\r\n            <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n              <Label>Description</Label>\r\n              <Editor\r\n                toolbarClassName=\"demo-toolbar-absolute\"\r\n                wrapperClassName=\"demo-wrapper\"\r\n                editorClassName=\"demo-editor\"\r\n                editorState={this.state.editorState}\r\n                onEditorStateChange={this.onEditorStateChange}\r\n                toolbar={{\r\n                  options: [\"inline\", \"blockType\", \"fontSize\", \"fontFamily\"],\r\n                  inline: {\r\n                    options: [\r\n                      \"bold\",\r\n                      \"italic\",\r\n                      \"underline\",\r\n                      \"strikethrough\",\r\n                      \"monospace\",\r\n                    ],\r\n                    bold: { className: \"bordered-option-classname\" },\r\n                    italic: { className: \"bordered-option-classname\" },\r\n                    underline: { className: \"bordered-option-classname\" },\r\n                    strikethrough: {\r\n                      className: \"bordered-option-classname\",\r\n                    },\r\n                    code: { className: \"bordered-option-classname\" },\r\n                  },\r\n                  blockType: {\r\n                    className: \"bordered-option-classname\",\r\n                  },\r\n                  fontSize: {\r\n                    className: \"bordered-option-classname\",\r\n                  },\r\n                  fontFamily: {\r\n                    className: \"bordered-option-classname\",\r\n                  },\r\n                }}\r\n              />\r\n              <br />\r\n            </Col>\r\n            <Button color=\"primary\"> Submit</Button>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default AddTermsCondition;\r\n"],"sourceRoot":""}