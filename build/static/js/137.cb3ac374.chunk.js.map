{"version":3,"sources":["views/apps/event/bookEvent/AddBookEvent.js"],"names":["AddBookEvent","useState","name","price","description","product","setProduct","setInputlist","start_Time","End_Time","time_slots","setInputFields","pooja_price","setpooja_price","city","setCity","duration","setDuration","benefits","setBenefits","poojaimg","setpoojaimg","mode_ofpuja","setmode_ofpuja","fullfill_location","setFullfill_location","pooja_type","setPooja_type","desc","setDesc","EditorState","createEmpty","setEditorState","pujaN","setPujaN","handleInputListAdd","handleInputListRemove","index","listData","splice","handleProductChange","e","target","value","view","removeInputFields","rows","handleChange","evnt","list","console","log","start","map","item","end","time","concat","id","toString","replaceAll","useEffect","axiosConfig","get","then","response","data","catch","error","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","key","col-sm-6","render","history","onClick","push","onSubmit","preventDefault","FormData","append","JSON","stringify","post","swal","submitHandler","lg","md","sm","required","type","onChange","allPuja","_id","pooja_name","placeholder","fullName","emailAddress","salary","length","color","files","style","marginRight","image","wrapperClassName","editorClassName","ReactHtmlParser","onEditorStateChange","editorState","draftToHtml","convertToRaw","getCurrentContent","toolbar","inline","inDropdown","textAlign","link","uploadCallback","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","send","addEventListener","parse","responseText","previewImage","alt","present","mandatory","Ripple"],"mappings":"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","file":"static/js/137.cb3ac374.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst AddBookEvent = () => {\r\n  const [product, setProduct] = useState([\r\n    {\r\n      // image: {},\r\n      name: \"\",\r\n      price: \"\",\r\n      description: \"\",\r\n    },\r\n  ]);\r\n  const [inputList, setInputlist] = useState([]);\r\n  const [time_slots, setInputFields] = useState([\r\n    {\r\n      start_Time: \"\",\r\n      End_Time: \"\",\r\n    },\r\n  ]);\r\n  const [timelist, setTimelist] = useState([]);\r\n  const [pooja_price, setpooja_price] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [duration, setDuration] = useState(\"\");\r\n  const [benefits, setBenefits] = useState(\"\");\r\n  const [poojaimg, setpoojaimg] = useState({});\r\n  const [mode_ofpuja, setmode_ofpuja] = useState(\"\");\r\n  const [fullfill_location, setFullfill_location] = useState(\"\");\r\n  const [pooja_type, setPooja_type] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n  const [pujaN, setPujaN] = useState([]);\r\n  const handleInputListAdd = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        // image: null,\r\n        name: \"\",\r\n        price: \"\",\r\n        description: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  const handleInputListRemove = (index) => {\r\n    const listData = [...product];\r\n    listData.splice(index, 1);\r\n    setProduct(listData);\r\n  };\r\n  const handleProductChange = (index, e) => {\r\n    const { name, value } = e.target;\r\n    const view = [...product];\r\n    view[index][name] = value;\r\n    setInputlist(view);\r\n  };\r\n\r\n  const addInputField = () => {\r\n    setInputFields([\r\n      ...time_slots,\r\n      {\r\n        start_Time: \"\",\r\n        End_Time: \"\",\r\n      },\r\n    ]);\r\n    console.log(time_slots.start_Time, time_slots.End_Time);\r\n  };\r\n  const removeInputFields = (index) => {\r\n    const rows = [...time_slots];\r\n    rows.splice(index, 1);\r\n    setInputFields(rows);\r\n  };\r\n  const handleChange = (index, evnt) => {\r\n    const { name, value } = evnt.target;\r\n    const list = [...time_slots];\r\n    list[index][name] = value;\r\n    setInputFields(list);\r\n    console.log(time_slots);\r\n\r\n    const start = time_slots.map((item) => item.start_Time);\r\n\r\n    const end = time_slots.map((item) => item.End_Time);\r\n    const time = start.concat(end);\r\n    console.log(\"time\", time);\r\n    let id1 = time.toString();\r\n    let id = id1.replaceAll(\",\", \"-\");\r\n    console.log(id);\r\n  };\r\n\r\n  const uploadImageCallBack = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\r\n      xhr.setRequestHeader(\"Authorization\", \"Client-ID 7e1c3e366d22aa3\");\r\n      const data = new FormData();\r\n      data.append(\"image\", file);\r\n      xhr.send(data);\r\n      xhr.addEventListener(\"load\", () => {\r\n        const response = JSON.parse(xhr.responseText);\r\n        resolve(response);\r\n      });\r\n      xhr.addEventListener(\"error\", () => {\r\n        const error = JSON.parse(xhr.responseText);\r\n        reject(error);\r\n      });\r\n    });\r\n  };\r\n  const changeHandler = (e) => {\r\n    setTimelist({ [e.target.name]: e.target.value });\r\n    setInputlist({ [e.target.name]: e.target.value });\r\n  };\r\n  const onEditorStateChange = (editorState) => {\r\n    setEditorState(editorState);\r\n    setDesc(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n\r\n    //  onEditorStateChange = (editorState) => {\r\n    //    this.setState({\r\n    //      editorState,\r\n    //      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    //    });\r\n    //  };\r\n  };\r\n\r\n  useEffect(() => {\r\n    axiosConfig\r\n      .get(\"/admin/admin_poojaList\")\r\n      .then((response) => {\r\n        setPujaN(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append(\"pooja_type\", pooja_type);\r\n    data.append(\"pooja_price\", pooja_price);\r\n    data.append(\"city\", city);\r\n    data.append(\"desc\", desc);\r\n    data.append(\"duration\", duration);\r\n    data.append(\"mode_ofpuja\", mode_ofpuja);\r\n    data.append(\"time_slots\", JSON.stringify(time_slots));\r\n    data.append(\"product\", JSON.stringify(product));\r\n    data.append(\"benefits\", benefits);\r\n    data.append(\"fullfill_location\", fullfill_location);\r\n\r\n    if (poojaimg != null) {\r\n      console.log(\"images\", poojaimg);\r\n      data.append(\"poojaimg\", poojaimg);\r\n    }\r\n    // if (product.image != null) {\r\n    //   data.append(\"product.image\", product[0].image);\r\n\r\n    // }\r\n    // for (let index = 0; index < product.length; index++) {\r\n    // const element = array[index];\r\n    // data.append(`product${[index]}.image`, product[index].image);\r\n    // }\r\n\r\n    // console.log(\"item\", product);\r\n    // data.append(\"product.image\", product.product);\r\n    // formData.append(`image${index}`, item);\r\n    // if (moreProduct.image != null) {\r\n    //  data.append(\"moreProduct.image\", moreProduct.image);\r\n    // }\r\n\r\n    axiosConfig\r\n      .post(`/admin/admin_Addevent`, data)\r\n      .then((response) => {\r\n        console.log(\"SDK\", response.data);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Breadcrumbs\r\n        breadCrumbTitle=\"Puja Type\"\r\n        breadCrumbParent=\" home\"\r\n        breadCrumbActive=\"Add Puja Type\"\r\n      />\r\n      <Card>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-8\"></div>\r\n          </div>\r\n          <div className=\"col-sm-4\"></div>\r\n        </div>\r\n        <Row>\r\n          <select name=\"cars\" id=\"cars\">\r\n            {time_slots?.map((value) => (\r\n              <>\r\n                <option key={value} value=\"volvo\">\r\n                  {value?.start_Time}- {value.End_Time}\r\n                </option>\r\n              </>\r\n            ))}\r\n          </select>\r\n        </Row>\r\n        <Row className=\"m-2\">\r\n          <Col>\r\n            <h1 col-sm-6 className=\"float-left\">\r\n              Add Puja\r\n            </h1>\r\n          </Col>\r\n          <Col>\r\n            <Route\r\n              render={({ history }) => (\r\n                <Button\r\n                  className=\" btn btn-danger float-right\"\r\n                  onClick={() =>\r\n                    history.push(\"/app/event/bookEvent/bookEventList\")\r\n                  }\r\n                >\r\n                  Back\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          <Form className=\"m-1\" onSubmit={(e) => submitHandler(e)}>\r\n            <Row>\r\n              <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                <Label> Name of Puja</Label>\r\n                <CustomInput\r\n                  required\r\n                  type=\"select\"\r\n                  name=\"pooja_type\"\r\n                  value={pooja_type}\r\n                  onChange={(e) => {\r\n                    setPooja_type(e.target.value);\r\n                    console.log(\"id\", pooja_type);\r\n                  }}\r\n                >\r\n                  <option>select Puja</option>\r\n                  {pujaN?.map((allPuja) => (\r\n                    <option value={allPuja?._id} key={allPuja?._id}>\r\n                      {allPuja?.pooja_name}\r\n                    </option>\r\n                  ))}\r\n                </CustomInput>\r\n              </Col>\r\n              <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                <Label>Price Of Puja</Label>\r\n                <Input\r\n                  required\r\n                  type=\"number\"\r\n                  name=\"pooja_price\"\r\n                  placeholder=\"Enter Price \"\r\n                  value={pooja_price}\r\n                  onChange={(e) => {\r\n                    setpooja_price(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </Col>\r\n              <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                <Label>Duration Of Puja</Label>\r\n                <Input\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"duration\"\r\n                  placeholder=\"Puja Duration Time\"\r\n                  value={duration}\r\n                  onChange={(e) => {\r\n                    setDuration(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </Col>\r\n              {time_slots.map((data, index) => {\r\n                const { fullName, emailAddress, salary } = data;\r\n                return (\r\n                  <>\r\n                    <Col key={index} lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                      <Label>Start Time Of Puja</Label>\r\n                      <Input\r\n                        type=\"time\"\r\n                        onChange={(evnt) => handleChange(index, evnt)}\r\n                        value={time_slots.start_Time}\r\n                        name=\"start_Time\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"start_Time\"\r\n                      ></Input>\r\n                    </Col>\r\n\r\n                    <Col key={index} lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                      <Label>End Time Of Puja</Label>\r\n                      <Input\r\n                        type=\"time\"\r\n                        onChange={(evnt) => handleChange(index, evnt)}\r\n                        value={time_slots.End_Time}\r\n                        name=\"End_Time\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"End_Time\"\r\n                      ></Input>\r\n                    </Col>\r\n\r\n                    {time_slots.length !== 1 ? (\r\n                      <Col key={index} lg=\"2\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                        <button\r\n                          className=\"btn btn-danger mt-1\"\r\n                          onClick={removeInputFields}\r\n                        >\r\n                          x\r\n                        </button>\r\n                      </Col>\r\n                    ) : null}\r\n                  </>\r\n                );\r\n              })}\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    className=\"ml-1 mt-1\"\r\n                    onClick={addInputField}\r\n                  >\r\n                    Add New\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n\r\n              <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                <Label>Mode of Puja </Label>\r\n                <CustomInput\r\n                  type=\"select\"\r\n                  required\r\n                  name=\"select\"\r\n                  onChange={(e) => setmode_ofpuja(e.target.value)}\r\n                >\r\n                  <option>select Puja</option>\r\n                  <option>offline</option>\r\n                  <option>online</option>\r\n                </CustomInput>\r\n              </Col>\r\n              <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                <Label>Image</Label>\r\n                <CustomInput\r\n                  type=\"file\"\r\n                  name=\"image\"\r\n                  // multiple\r\n                  onChange={(e) => setpoojaimg(e.target.files[0])}\r\n                />\r\n              </Col>\r\n              {mode_ofpuja === \"online\" ? (\r\n                <>\r\n                  <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                    <Label>Fullfill Location of Puja</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"fullfill_location\"\r\n                      placeholder=\"Enter Current Location\"\r\n                      value={fullfill_location}\r\n                      onChange={(e) => {\r\n                        setFullfill_location(e.target.value);\r\n                      }}\r\n                    ></Input>\r\n                  </Col>\r\n                  <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                    <Label>Puja City</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"city\"\r\n                      placeholder=\"Enter City\"\r\n                      value={city}\r\n                      onChange={(e) => {\r\n                        setCity(e.target.value);\r\n                      }}\r\n                    ></Input>\r\n                  </Col>\r\n                  <Col lg=\"4\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                    <Label className=\"mb-1\">Live Streaming</Label>\r\n                    <div className=\"form-label-group\">\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"liveStreaming\"\r\n                        value=\"true\"\r\n                      />\r\n                      <span style={{ marginRight: \"20px\" }}>Available</span>\r\n\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"liveStreaming\"\r\n                        value=\"false\"\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Unvailable</span>\r\n                    </div>\r\n                  </Col>\r\n                </>\r\n              ) : null}\r\n\r\n              <Col lg=\"12\" md=\"12\">\r\n                <h2 className=\"\">Add Product </h2>\r\n              </Col>\r\n              {product?.map((data, index) => {\r\n                const { name, image, price, description } = data;\r\n                return (\r\n                  <>\r\n                    {/* <Col lg=\"4\" className=\"mb-2\">\r\n                      <Label>Image</Label>\r\n                      <CustomInput\r\n                        type=\"file\"\r\n                        name=\"image\"\r\n                        onChange={(e) => setMoreProduct(e.target.files[0])}\r\n                        onChange={(e) => handleProductImage(index, e)}\r\n                      />\r\n                    </Col> */}\r\n                    <Col lg=\"4\" className=\"mb-2\">\r\n                      <Label>Name</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\"Enter Name\"\r\n                        value={product.name}\r\n                        onChange={(e) => handleProductChange(index, e)}\r\n                      />\r\n                    </Col>\r\n                    <Col lg=\"4\" className=\"mb-2\">\r\n                      <Label>Price</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        name=\"price\"\r\n                        placeholder=\"Enter Price\"\r\n                        value={product.price}\r\n                        onChange={(e) => handleProductChange(index, e)}\r\n                      />\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"mb-2\">\r\n                      <Label>Description</Label>\r\n                      <Input\r\n                        required\r\n                        rows={1}\r\n                        type=\"textarea\"\r\n                        name=\"description\"\r\n                        placeholder=\"Enter Description\"\r\n                        value={product.description}\r\n                        onChange={(e) => handleProductChange(index, e)}\r\n                      />\r\n                    </Col>\r\n                    {product.length - 1 === index ? (\r\n                      <Col lg=\"3\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          className=\"ml-1 mt-1\"\r\n                          onClick={handleInputListAdd}\r\n                        >\r\n                          Add more\r\n                        </Button>\r\n                      </Col>\r\n                    ) : null}\r\n                    {product.length !== 1 ? (\r\n                      <Col key={index} lg=\"3\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                        <Button\r\n                          className=\"btn btn-danger mt-1\"\r\n                          onClick={handleInputListRemove}\r\n                        >\r\n                          X\r\n                        </Button>\r\n                      </Col>\r\n                    ) : null}\r\n                  </>\r\n                );\r\n              })}\r\n\r\n              <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                <Label>Benefits</Label>\r\n                <Input\r\n                  required\r\n                  type=\"textarea\"\r\n                  name=\"benefits\"\r\n                  placeholder=\"Enter benefits\"\r\n                  value={benefits}\r\n                  onChange={(e) => setBenefits(e.target.value)}\r\n                ></Input>\r\n              </Col>\r\n\r\n              <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                <Label>About puja</Label>\r\n                <br />\r\n                <Editor\r\n                  wrapperClassName=\"demo-wrapper\"\r\n                  editorClassName=\"demo-editor\"\r\n                  value={ReactHtmlParser(desc)}\r\n                  onEditorStateChange={onEditorStateChange}\r\n                  toolbar={{\r\n                    inline: { inDropdown: true },\r\n                    list: { inDropdown: true },\r\n                    textAlign: { inDropdown: true },\r\n                    link: { inDropdown: true },\r\n                    history: { inDropdown: true },\r\n                    image: {\r\n                      uploadCallback: uploadImageCallBack,\r\n                      previewImage: true,\r\n                      alt: { present: true, mandatory: true },\r\n                    },\r\n                  }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mb-1\"\r\n                >\r\n                  Save\r\n                </Button.Ripple>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default AddBookEvent;\r\n"],"sourceRoot":""}